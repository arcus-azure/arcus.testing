jobs:
  - job: UnitTests
    displayName: 'Run unit tests'
    pool:
      vmImage: '$(Vm.Image)'
    steps:
      - task: DownloadPipelineArtifact@2
        displayName: 'Download build artifacts'
        inputs:
          artifact: 'Build'
          path: '$(Build.SourcesDirectory)'

      - task: UseDotNet@2
        displayName: 'Import .NET SDK ($(DotNet.Sdk.VersionBC))'
        inputs:
          packageType: 'sdk'
          version: '$(DotNet.Sdk.VersionBC)'

      - task: UseDotNet@2
        displayName: 'Import .NET Core SDK ($(DotNet.Sdk.Version))'
        inputs:
          packageType: 'sdk'
          version: '$(DotNet.Sdk.Version)'
          includePreviewVersions: $(DotNet.Sdk.IncludePreviewVersions)

      - script: |
          dotnet test $(Build.SourcesDirectory)/src/$(Project).Tests.Unit/$(Project).Tests.Unit.csproj \
            --no-build \
            --configuration $(Build.Configuration) \
            --collect:"XPlat Code Coverage" \
            --verbosity detailed \
            --logger trx \
            --results-directory $(Pipeline.Workspace)
        displayName: 'Run unit tests'

      - task: PublishTestResults@2
        displayName: 'Publish unit test results'
        condition: always()
        inputs:
          testResultsFormat: 'VSTest'
          testResultsFiles: '$(Pipeline.Workspace)/*.trx'
          failTaskOnMissingResultsFile: true

      - task: PublishPipelineArtifact@1
        displayName: 'Publish code coverage artifacts'
        inputs:
          targetPath: '$(Pipeline.Workspace)'
          artifactName: Coverage-Unit
