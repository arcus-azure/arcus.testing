parameters:
  azureServiceConnection: ''

jobs:
  - job: ValidateBicep
    displayName: 'Validate Bicep file(s)'
    pool:
      vmImage: $(Vm.Image)
    steps:
      - task: AzureCLI@2
        displayName: 'Build Bicep file(s)'
        inputs:
          azureSubscription: '${{ parameters.azureServiceConnection }}'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          addSpnToEnvironment: true
          inlineScript: |
            Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
            Install-Module -Name Arcus.Scripting.DevOps -AllowClobber

            Set-AzDevOpsVariable -Name 'Arcus.Testing.TenantId' -Value $env:tenantId
            Set-AzDevOpsVariable -Name 'Arcus.Testing.ServicePrincipal.ClientId' -Value $env:servicePrincipalId
            Set-AzDevOpsVariable -Name 'Arcus.Testing.ServicePrincipal.ClientSecret' -Value $env:servicePrincipalKey -AsSecret

      - task: ps-rule-assert@2
        displayName: Analyze Azure template files
        inputs:
          modules: 'PSRule.Rules.Azure'
        env:
          AZURE_CLIENT_ID: $(Arcus.Testing.ServicePrincipal.ClientId)
          AZURE_CLIENT_SECRET: $(Arcus.Testing.ServicePrincipal.ClientSecret)
          AZURE_TENANT_ID: $(Arcus.Testing.ServicePrincipal.TenantId)