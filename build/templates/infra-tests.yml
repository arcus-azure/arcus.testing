parameters:
  azureServiceConnection: ''

jobs:
  - job: InfraTests
    displayName: 'Run infrastructure tests'
    pool:
      vmImage: $(Vm.Image)
    steps:
      - task: AzureCLI@2
        displayName: 'Build Bicep file(s)'
        inputs:
          azureSubscription: '${{ parameters.azureServiceConnection }}'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          addSpnToEnvironment: true
          inlineScript: |
            Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
            Install-Module -Name Arcus.Scripting.DevOps -AllowClobber

            Set-AzDevOpsVariable -Name 'Arcus.Testing.TenantId' -Value $env:tenantId
            Set-AzDevOpsVariable -Name 'Arcus.Testing.ServicePrincipal.ClientId' -Value $env:servicePrincipalId
            Set-AzDevOpsVariable -Name 'Arcus.Testing.ServicePrincipal.ClientSecret' -Value $env:servicePrincipalKey -AsSecret

      - task: AzureCLI@2
        displayName: Analyze Azure template files
        inputs:
          azureSubscription: '${{ parameters.azureServiceConnection }}'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          addSpnToEnvironment: true
          inlineScript: |
            Install-Module -Name PSRule.Rules.Azure -Scope CurrentUser -Force
            Assert-PSRule -Module 'PSRule.Rules.Azure' -InputPath './build/templates/' -o NUnit3 -OutputPath ./psrule-reports/results.xml

      - task: PublishTestResults@2
        condition: always()
        inputs:
          testResultsFormat: 'NUnit'
          testResultsFiles: './psrule-reports/results.xml'