parameters:
  azureServiceConnection: ''

jobs:
  - job: InfraTests
    displayName: 'Run infrastructure tests'
    pool:
      vmImage: $(Vm.Image)
    steps:
      - task: AzureCLI@2
        displayName: 'Build Bicep file(s)'
        inputs:
          azureSubscription: '${{ parameters.azureServiceConnection }}'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          addSpnToEnvironment: true
          inlineScript: |
            Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
            Install-Module -Name Arcus.Scripting.DevOps -AllowClobber

            Set-AzDevOpsVariable -Name 'Arcus.Testing.TenantId' -Value $env:tenantId
            Set-AzDevOpsVariable -Name 'Arcus.Testing.ServicePrincipal.ClientId' -Value $env:servicePrincipalId
            Set-AzDevOpsVariable -Name 'Arcus.Testing.ServicePrincipal.ClientSecret' -Value $env:servicePrincipalKey -AsSecret

      - task: AzureCLI@2
        displayName: Analyze Azure policies
        inputs:
          azureSubscription: '${{ parameters.azureServiceConnection }}'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          addSpnToEnvironment: true
          inlineScript: |
            Install-Module -Name Pester -Force -SkipPublisherCheck
            Invoke-Pester -Script "./build/templates/policy-tests.ps1" -OutputFile "./pester.test.results.xml" -OutputFormat 'NUnitXML' -EnableExit

      - task: PublishTestResults@2
        displayName: 'Publish test results'
        inputs:
          testResultsFormat: 'NUnit'
          testResultsFiles: '**/pester.test.results.xml'
          failTaskOnFailedTests: true