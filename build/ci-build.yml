name: $(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - src/*

pr:
  paths:
    include:
      - src/*
      - build/*

parameters:
  - name: 'Package.Version.ManualTrigger'
    type: string
    default: 'preview'
  - name: azureServiceConnection
    displayName: 'Azure service connection'
    type: string
    default: 'Azure Codit-Arcus Service Principal'

resources:
  repositories:
    - repository: templates
      type: github
      name: arcus-azure/azure-devops-templates
      endpoint: arcus-azure

variables:
  - group: 'GitHub Configuration'
  - group: 'Build Configuration'
  - group: 'MyGet'
  - template: ./variables/build.yml
  - template: ./variables/test.yml

stages:
  - stage: Build
    jobs:
      - job: Compile
        pool:
          vmImage: '$(Vm.Image)'
        steps:
          - template: 'nuget/determine-pr-version.yml@templates'
            parameters:
              manualTriggerVersion: ${{ parameters['Package.Version.ManualTrigger'] }}
          - task: UseDotNet@2
            displayName: 'Import .NET SDK ($(DotNet.Sdk.VersionBC))'
            inputs:
              packageType: 'sdk'
              version: '$(DotNet.Sdk.VersionBC)'
          - template: 'build/build-solution.yml@templates'
            parameters:
              dotnetSdkVersion: '$(DotNet.Sdk.Version)'
              versionSuffix: '$(packageVersion)'
              includePreviewVersions: $(DotNet.Sdk.IncludePreviewVersions)
          - task: CopyFiles@2
            displayName: 'Copy build artifacts'
            inputs:
              contents: 'src/**'
              targetFolder: '$(Pipeline.Workspace)/build'
          - task: PublishPipelineArtifact@0
            displayName: 'Publish build artifacts'
            inputs:
              targetPath: '$(Pipeline.Workspace)/build'
              artifactName: Build

  - stage: Tests
    dependsOn: Build
    condition: succeeded()
    jobs:
      - template: templates/unit-tests.yml
      # - template: templates/integration-tests.yml
      #   parameters:
      #     azureServiceConnection: '${{ parameters.azureServiceConnection }}'
      - template: templates/publish-coverage.yml

  - stage: ReleaseToMyget
    displayName: 'Release to MyGet'
    dependsOn: Tests
    condition: succeeded()
    jobs:
      - job: PushToMyGet
        displayName: 'Push to MyGet'
        pool:
          vmImage: '$(Vm.Image)'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Build'
              path: '$(Build.SourcesDirectory)'
          - task: DotNetCoreCLI@2
            displayName: 'Push to MyGet.org'
            inputs:
              command: 'custom'
              custom: 'nuget'
              arguments: 'push src/**/*.nupkg --skip-duplicate --source $(MyGet.SourceUrl) --api-key $(MyGet.ApiKey)'
