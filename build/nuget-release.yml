name: $(Package.Version)

trigger: none
pr: none

parameters:
  - name: 'Package.Version'
    type: 'string'
  - name: azureServiceConnection
    displayName: 'Azure service connection'
    type: string
    default: 'Azure Codit-Arcus Service Principal'

resources:
  repositories:
    - repository: templates
      type: github
      name: arcus-azure/azure-devops-templates
      endpoint: arcus-azure

variables:
  - group: 'GitHub Configuration'
  - group: 'NuGet'
  - group: 'Build Configuration'
  - template: ./variables/build.yml
  - template: ./variables/test.yml
  - name: 'Repository'
    value: 'arcus-azure/arcus.testing'
  - name: 'Package.Version'
    value: ${{ parameters['Package.Version'] }}

stages:
  - stage: Build
    jobs:
      - job: Compile
        pool:
          vmImage: '$(Vm.Image)'
        steps:
          - task: UseDotNet@2
            displayName: 'Import .NET SDK ($(DotNet.Sdk.VersionBC))'
            inputs:
              packageType: 'sdk'
              version: '$(DotNet.Sdk.VersionBC)'
          - template: build/build-solution.yml@templates
            parameters:
              dotnetSdkVersion: '$(DotNet.Sdk.Version)'
              version: $(Build.BuildNumber)
              includePreviewVersions: $(DotNet.Sdk.IncludePreviewVersions)
          - task: CopyFiles@2
            displayName: 'Copy build artifacts'
            inputs:
              contents: '**/?(bin|obj)/**'
              targetFolder: '$(Pipeline.Workspace)/build'
          - task: PublishPipelineArtifact@0
            displayName: 'Publish build artifacts'
            inputs:
              targetPath: '$(Pipeline.Workspace)/build'
              artifactName: Build

  - stage: UnitTests
    displayName: Unit Tests
    dependsOn: Build
    condition: succeeded()
    jobs:
      - template: templates/unit-tests.yml

  - stage: IntegrationTests
    displayName: Integration Tests
    dependsOn: Build
    condition: succeeded()
    jobs:
      - template: templates/integration-tests.yml
        parameters:
          azureServiceConnection: '${{ parameters.azureServiceConnection }}'

  - stage: Release
    displayName: 'Release to NuGet.org'
    dependsOn:
      - UnitTests
      - IntegrationTests
    condition: succeeded()
    jobs:
      - job: PushToNuGet
        displayName: 'Push to NuGet.org'
        pool:
          vmImage: '$(Vm.Image)'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Build'
              path: '$(Build.SourcesDirectory)'
          - template: github/create-release.yml@templates
            parameters:
              repositoryName: '$(Repository)'
              releaseNotes: |
                Install the $(Project) packages that you need via NuGet, for instance [$(Project).Logging.Xunit](https://www.nuget.org/packages/$(Project).Logging.Xunit/$(Build.BuildNumber)):
                ```shell
                PM > Install-Package $(Project).Logging.Xunit --Version $(Build.BuildNumber)
                ```
                For a complete list of all $(Project) packages see the [documentation](https://testing.arcus-azure.net/).
                ## What's new?
                ### Features
                * Provide the capability to do something (#123)
                ### Fixes / Changes
                None.
                ### Breaking Changes
                None.
                ### Removal
                None.
          - task: DotNetCoreCLI@2
            displayName: 'Push to NuGet.org'
            inputs:
              command: 'custom'
              custom: 'nuget'
              arguments: 'push src/**/*.nupkg --source $(NuGet.SourceUrl) --api-key $(NuGet.ApiKey)'
          - template: templates/trigger-bump-docs-version.yml
            parameters:
              gitHubToken: $(GITHUB_TOKEN)
