name: "Code Coverage"

on:
  push:
    branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        dotnet-quality: 'preview'

    - name: Coverlet coverage unit test
      run: dotnet test --framework net8.0 -p:coverletOutput=TestResults/ -p:CollectCoverage=true -p:CoverletOutputFormat=\"lcov\" -p:ExcludeByAttribute=\"Obsolete,GeneratedCodeAttribute,CompilerGeneratedAttribute\" -p:Exclude=\"[Arcus.Testing.Tests.*]*\" src/Arcus.Testing.Tests.Unit/Arcus.Testing.Tests.Unit.csproj

    - name: Coverlet coverage integration test
      run: dotnet test --framework net8.0 -p:coverletOutput=TestResults/ -p:CollectCoverage=true -p:CoverletOutputFormat=\"lcov\" -p:ExcludeByAttribute=\"Obsolete,GeneratedCodeAttribute,CompilerGeneratedAttribute\" -p:Exclude=\"[Arcus.Testing.Tests.*]*\" src/Arcus.Testing.Tests.Integration/Arcus.Testing.Tests.Integration.csproj

    - name: Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} 
        files: /home/runner/work/arcus.testing/arcus.testing/src/Arcus.Testing.Tests.Unit/TestResults/coverage.net8.0.info /home/runner/work/arcus.testing/arcus.testing/src/Arcus.Testing.Tests.Integration/TestResults/coverage.net8.0.info
        format: lcov
        debug: true
